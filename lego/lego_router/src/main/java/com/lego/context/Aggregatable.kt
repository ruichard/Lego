package com.lego.context

import com.lego.Lego
import com.lego.route.Queries
import com.lego.route.Query
import com.lego.route.ResultGroups
import com.lego.router.annotations.RInvariant

/**
 * Aggregate router function and router event of Context.
 * The specific implementation will be automatically generated by lego-kapt.
 *
 * @since: 1.0
 */
interface Aggregatable {
    /**
     * Will invoking when route to a RRouter function.
     */
    fun onRoute(path: String, queries: Queries, results: ResultGroups)
    /**
     * Will invoking when route to a REvent function.
     */
    fun onEvent(msg: String, queries: Queries)
}

abstract class AggregateFactory {
    abstract val URI: String
    abstract val DEPENDENCIES: List<String>
    abstract val EVENT_MSGS: List<String>
    abstract val CREATOR: () -> Aggregatable

    @RInvariant
    fun register() {
        Lego.registerAggregateFactory(this)
    }
}

fun Aggregatable.doEvent(msg: String, vararg args: Any) {
    onEvent(msg, Queries().apply {
        args.forEachIndexed { index, value ->
            add(Query("lego_aggregate_live_arg${index}", value))
        }
    })
}